#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.1
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WinAssurance
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BDassurance")]
	public partial class AssuranceDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertAssurance(Assurance instance);
    partial void UpdateAssurance(Assurance instance);
    partial void DeleteAssurance(Assurance instance);
    partial void InsertCategorie_client(Categorie_client instance);
    partial void UpdateCategorie_client(Categorie_client instance);
    partial void DeleteCategorie_client(Categorie_client instance);
    partial void InsertCategorie_Plainte(Categorie_Plainte instance);
    partial void UpdateCategorie_Plainte(Categorie_Plainte instance);
    partial void DeleteCategorie_Plainte(Categorie_Plainte instance);
    partial void InsertClient(Client instance);
    partial void UpdateClient(Client instance);
    partial void DeleteClient(Client instance);
    partial void InsertDate_livraison(Date_livraison instance);
    partial void UpdateDate_livraison(Date_livraison instance);
    partial void DeleteDate_livraison(Date_livraison instance);
    partial void InsertDossier(Dossier instance);
    partial void UpdateDossier(Dossier instance);
    partial void DeleteDossier(Dossier instance);
    partial void InsertFacturation(Facturation instance);
    partial void UpdateFacturation(Facturation instance);
    partial void DeleteFacturation(Facturation instance);
    partial void InsertPresentation_Pliante(Presentation_Pliante instance);
    partial void UpdatePresentation_Pliante(Presentation_Pliante instance);
    partial void DeletePresentation_Pliante(Presentation_Pliante instance);
    partial void InsertPlainte(Plainte instance);
    partial void UpdatePlainte(Plainte instance);
    partial void DeletePlainte(Plainte instance);
    #endregion
		
		public AssuranceDataContext() : 
				base(global::WinAssurance.Properties.Settings.Default.BDassuranceConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AssuranceDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AssuranceDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AssuranceDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AssuranceDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Assurance> Assurance
		{
			get
			{
				return this.GetTable<Assurance>();
			}
		}
		
		public System.Data.Linq.Table<Categorie_client> Categorie_client
		{
			get
			{
				return this.GetTable<Categorie_client>();
			}
		}
		
		public System.Data.Linq.Table<Categorie_Plainte> Categorie_Plainte
		{
			get
			{
				return this.GetTable<Categorie_Plainte>();
			}
		}
		
		public System.Data.Linq.Table<Client> Client
		{
			get
			{
				return this.GetTable<Client>();
			}
		}
		
		public System.Data.Linq.Table<Date_livraison> Date_livraison
		{
			get
			{
				return this.GetTable<Date_livraison>();
			}
		}
		
		public System.Data.Linq.Table<Dossier> Dossier
		{
			get
			{
				return this.GetTable<Dossier>();
			}
		}
		
		public System.Data.Linq.Table<Facturation> Facturation
		{
			get
			{
				return this.GetTable<Facturation>();
			}
		}
		
		public System.Data.Linq.Table<Presentation_Pliante> Presentation_Pliante
		{
			get
			{
				return this.GetTable<Presentation_Pliante>();
			}
		}
		
		public System.Data.Linq.Table<Plainte> Plainte
		{
			get
			{
				return this.GetTable<Plainte>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Assurance")]
	public partial class Assurance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NumAss;
		
		private string _LibAss;
		
		private string _CodeLivr;
		
		private string _Numcli;
		
		private EntityRef<Date_livraison> _Date_livraison;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumAssChanging(string value);
    partial void OnNumAssChanged();
    partial void OnLibAssChanging(string value);
    partial void OnLibAssChanged();
    partial void OnCodeLivrChanging(string value);
    partial void OnCodeLivrChanged();
    partial void OnNumcliChanging(string value);
    partial void OnNumcliChanged();
    #endregion
		
		public Assurance()
		{
			this._Date_livraison = default(EntityRef<Date_livraison>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumAss", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NumAss
		{
			get
			{
				return this._NumAss;
			}
			set
			{
				if ((this._NumAss != value))
				{
					this.OnNumAssChanging(value);
					this.SendPropertyChanging();
					this._NumAss = value;
					this.SendPropertyChanged("NumAss");
					this.OnNumAssChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibAss", DbType="VarChar(20)")]
		public string LibAss
		{
			get
			{
				return this._LibAss;
			}
			set
			{
				if ((this._LibAss != value))
				{
					this.OnLibAssChanging(value);
					this.SendPropertyChanging();
					this._LibAss = value;
					this.SendPropertyChanged("LibAss");
					this.OnLibAssChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeLivr", DbType="VarChar(5)")]
		public string CodeLivr
		{
			get
			{
				return this._CodeLivr;
			}
			set
			{
				if ((this._CodeLivr != value))
				{
					if (this._Date_livraison.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodeLivrChanging(value);
					this.SendPropertyChanging();
					this._CodeLivr = value;
					this.SendPropertyChanged("CodeLivr");
					this.OnCodeLivrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numcli", DbType="VarChar(5)")]
		public string Numcli
		{
			get
			{
				return this._Numcli;
			}
			set
			{
				if ((this._Numcli != value))
				{
					this.OnNumcliChanging(value);
					this.SendPropertyChanging();
					this._Numcli = value;
					this.SendPropertyChanged("Numcli");
					this.OnNumcliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Date_livraison_Assurance", Storage="_Date_livraison", ThisKey="CodeLivr", OtherKey="CodeLivr", IsForeignKey=true)]
		public Date_livraison Date_livraison
		{
			get
			{
				return this._Date_livraison.Entity;
			}
			set
			{
				Date_livraison previousValue = this._Date_livraison.Entity;
				if (((previousValue != value) 
							|| (this._Date_livraison.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Date_livraison.Entity = null;
						previousValue.Assurance.Remove(this);
					}
					this._Date_livraison.Entity = value;
					if ((value != null))
					{
						value.Assurance.Add(this);
						this._CodeLivr = value.CodeLivr;
					}
					else
					{
						this._CodeLivr = default(string);
					}
					this.SendPropertyChanged("Date_livraison");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categorie_client")]
	public partial class Categorie_client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodeCateg;
		
		private string _LibCateg;
		
		private EntitySet<Client> _Client;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeCategChanging(string value);
    partial void OnCodeCategChanged();
    partial void OnLibCategChanging(string value);
    partial void OnLibCategChanged();
    #endregion
		
		public Categorie_client()
		{
			this._Client = new EntitySet<Client>(new Action<Client>(this.attach_Client), new Action<Client>(this.detach_Client));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeCateg", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodeCateg
		{
			get
			{
				return this._CodeCateg;
			}
			set
			{
				if ((this._CodeCateg != value))
				{
					this.OnCodeCategChanging(value);
					this.SendPropertyChanging();
					this._CodeCateg = value;
					this.SendPropertyChanged("CodeCateg");
					this.OnCodeCategChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibCateg", DbType="VarChar(20)")]
		public string LibCateg
		{
			get
			{
				return this._LibCateg;
			}
			set
			{
				if ((this._LibCateg != value))
				{
					this.OnLibCategChanging(value);
					this.SendPropertyChanging();
					this._LibCateg = value;
					this.SendPropertyChanged("LibCateg");
					this.OnLibCategChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categorie_client_Client", Storage="_Client", ThisKey="CodeCateg", OtherKey="CodeCateg")]
		public EntitySet<Client> Client
		{
			get
			{
				return this._Client;
			}
			set
			{
				this._Client.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Client(Client entity)
		{
			this.SendPropertyChanging();
			entity.Categorie_client = this;
		}
		
		private void detach_Client(Client entity)
		{
			this.SendPropertyChanging();
			entity.Categorie_client = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categorie_Plainte")]
	public partial class Categorie_Plainte : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodeCategpl;
		
		private string _LibCategPl;
		
		private EntitySet<Plainte> _Plainte;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeCategplChanging(string value);
    partial void OnCodeCategplChanged();
    partial void OnLibCategPlChanging(string value);
    partial void OnLibCategPlChanged();
    #endregion
		
		public Categorie_Plainte()
		{
			this._Plainte = new EntitySet<Plainte>(new Action<Plainte>(this.attach_Plainte), new Action<Plainte>(this.detach_Plainte));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeCategpl", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodeCategpl
		{
			get
			{
				return this._CodeCategpl;
			}
			set
			{
				if ((this._CodeCategpl != value))
				{
					this.OnCodeCategplChanging(value);
					this.SendPropertyChanging();
					this._CodeCategpl = value;
					this.SendPropertyChanged("CodeCategpl");
					this.OnCodeCategplChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibCategPl", DbType="VarChar(25)")]
		public string LibCategPl
		{
			get
			{
				return this._LibCategPl;
			}
			set
			{
				if ((this._LibCategPl != value))
				{
					this.OnLibCategPlChanging(value);
					this.SendPropertyChanging();
					this._LibCategPl = value;
					this.SendPropertyChanged("LibCategPl");
					this.OnLibCategPlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categorie_Plainte_Plainte", Storage="_Plainte", ThisKey="CodeCategpl", OtherKey="codecategPl")]
		public EntitySet<Plainte> Plainte
		{
			get
			{
				return this._Plainte;
			}
			set
			{
				this._Plainte.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Plainte(Plainte entity)
		{
			this.SendPropertyChanging();
			entity.Categorie_Plainte = this;
		}
		
		private void detach_Plainte(Plainte entity)
		{
			this.SendPropertyChanging();
			entity.Categorie_Plainte = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Client")]
	public partial class Client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Numcli;
		
		private string _Nom;
		
		private string _Postnom;
		
		private string _Prenom;
		
		private System.Nullable<char> _Sexe;
		
		private string _Jrnaiss;
		
		private string _MsNaiss;
		
		private string _AnNaiss;
		
		private string _Rue;
		
		private string _NumRue;
		
		private string _Quartier;
		
		private string _Commune;
		
		private string _Ville;
		
		private string _Nationalite;
		
		private string _Tel;
		
		private string _CodeCateg;
		
		private EntitySet<Facturation> _Facturation;
		
		private EntityRef<Categorie_client> _Categorie_client;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumcliChanging(string value);
    partial void OnNumcliChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnPostnomChanging(string value);
    partial void OnPostnomChanged();
    partial void OnPrenomChanging(string value);
    partial void OnPrenomChanged();
    partial void OnSexeChanging(System.Nullable<char> value);
    partial void OnSexeChanged();
    partial void OnJrnaissChanging(string value);
    partial void OnJrnaissChanged();
    partial void OnMsNaissChanging(string value);
    partial void OnMsNaissChanged();
    partial void OnAnNaissChanging(string value);
    partial void OnAnNaissChanged();
    partial void OnRueChanging(string value);
    partial void OnRueChanged();
    partial void OnNumRueChanging(string value);
    partial void OnNumRueChanged();
    partial void OnQuartierChanging(string value);
    partial void OnQuartierChanged();
    partial void OnCommuneChanging(string value);
    partial void OnCommuneChanged();
    partial void OnVilleChanging(string value);
    partial void OnVilleChanged();
    partial void OnNationaliteChanging(string value);
    partial void OnNationaliteChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnCodeCategChanging(string value);
    partial void OnCodeCategChanged();
    #endregion
		
		public Client()
		{
			this._Facturation = new EntitySet<Facturation>(new Action<Facturation>(this.attach_Facturation), new Action<Facturation>(this.detach_Facturation));
			this._Categorie_client = default(EntityRef<Categorie_client>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numcli", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Numcli
		{
			get
			{
				return this._Numcli;
			}
			set
			{
				if ((this._Numcli != value))
				{
					this.OnNumcliChanging(value);
					this.SendPropertyChanging();
					this._Numcli = value;
					this.SendPropertyChanged("Numcli");
					this.OnNumcliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="VarChar(50)")]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postnom", DbType="VarChar(50)")]
		public string Postnom
		{
			get
			{
				return this._Postnom;
			}
			set
			{
				if ((this._Postnom != value))
				{
					this.OnPostnomChanging(value);
					this.SendPropertyChanging();
					this._Postnom = value;
					this.SendPropertyChanged("Postnom");
					this.OnPostnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prenom", DbType="VarChar(50)")]
		public string Prenom
		{
			get
			{
				return this._Prenom;
			}
			set
			{
				if ((this._Prenom != value))
				{
					this.OnPrenomChanging(value);
					this.SendPropertyChanging();
					this._Prenom = value;
					this.SendPropertyChanged("Prenom");
					this.OnPrenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sexe", DbType="Char(1)")]
		public System.Nullable<char> Sexe
		{
			get
			{
				return this._Sexe;
			}
			set
			{
				if ((this._Sexe != value))
				{
					this.OnSexeChanging(value);
					this.SendPropertyChanging();
					this._Sexe = value;
					this.SendPropertyChanged("Sexe");
					this.OnSexeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jrnaiss", DbType="VarChar(2)")]
		public string Jrnaiss
		{
			get
			{
				return this._Jrnaiss;
			}
			set
			{
				if ((this._Jrnaiss != value))
				{
					this.OnJrnaissChanging(value);
					this.SendPropertyChanging();
					this._Jrnaiss = value;
					this.SendPropertyChanged("Jrnaiss");
					this.OnJrnaissChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MsNaiss", DbType="VarChar(15)")]
		public string MsNaiss
		{
			get
			{
				return this._MsNaiss;
			}
			set
			{
				if ((this._MsNaiss != value))
				{
					this.OnMsNaissChanging(value);
					this.SendPropertyChanging();
					this._MsNaiss = value;
					this.SendPropertyChanged("MsNaiss");
					this.OnMsNaissChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnNaiss", DbType="VarChar(8)")]
		public string AnNaiss
		{
			get
			{
				return this._AnNaiss;
			}
			set
			{
				if ((this._AnNaiss != value))
				{
					this.OnAnNaissChanging(value);
					this.SendPropertyChanging();
					this._AnNaiss = value;
					this.SendPropertyChanged("AnNaiss");
					this.OnAnNaissChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rue", DbType="VarChar(20)")]
		public string Rue
		{
			get
			{
				return this._Rue;
			}
			set
			{
				if ((this._Rue != value))
				{
					this.OnRueChanging(value);
					this.SendPropertyChanging();
					this._Rue = value;
					this.SendPropertyChanged("Rue");
					this.OnRueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumRue", DbType="VarChar(8)")]
		public string NumRue
		{
			get
			{
				return this._NumRue;
			}
			set
			{
				if ((this._NumRue != value))
				{
					this.OnNumRueChanging(value);
					this.SendPropertyChanging();
					this._NumRue = value;
					this.SendPropertyChanged("NumRue");
					this.OnNumRueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quartier", DbType="VarChar(20)")]
		public string Quartier
		{
			get
			{
				return this._Quartier;
			}
			set
			{
				if ((this._Quartier != value))
				{
					this.OnQuartierChanging(value);
					this.SendPropertyChanging();
					this._Quartier = value;
					this.SendPropertyChanged("Quartier");
					this.OnQuartierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commune", DbType="VarChar(25)")]
		public string Commune
		{
			get
			{
				return this._Commune;
			}
			set
			{
				if ((this._Commune != value))
				{
					this.OnCommuneChanging(value);
					this.SendPropertyChanging();
					this._Commune = value;
					this.SendPropertyChanged("Commune");
					this.OnCommuneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ville", DbType="VarChar(30)")]
		public string Ville
		{
			get
			{
				return this._Ville;
			}
			set
			{
				if ((this._Ville != value))
				{
					this.OnVilleChanging(value);
					this.SendPropertyChanging();
					this._Ville = value;
					this.SendPropertyChanged("Ville");
					this.OnVilleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nationalite", DbType="VarChar(20)")]
		public string Nationalite
		{
			get
			{
				return this._Nationalite;
			}
			set
			{
				if ((this._Nationalite != value))
				{
					this.OnNationaliteChanging(value);
					this.SendPropertyChanging();
					this._Nationalite = value;
					this.SendPropertyChanged("Nationalite");
					this.OnNationaliteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="VarChar(15)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeCateg", DbType="VarChar(5)")]
		public string CodeCateg
		{
			get
			{
				return this._CodeCateg;
			}
			set
			{
				if ((this._CodeCateg != value))
				{
					if (this._Categorie_client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodeCategChanging(value);
					this.SendPropertyChanging();
					this._CodeCateg = value;
					this.SendPropertyChanged("CodeCateg");
					this.OnCodeCategChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Facturation", Storage="_Facturation", ThisKey="Numcli", OtherKey="Numcli")]
		public EntitySet<Facturation> Facturation
		{
			get
			{
				return this._Facturation;
			}
			set
			{
				this._Facturation.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categorie_client_Client", Storage="_Categorie_client", ThisKey="CodeCateg", OtherKey="CodeCateg", IsForeignKey=true)]
		public Categorie_client Categorie_client
		{
			get
			{
				return this._Categorie_client.Entity;
			}
			set
			{
				Categorie_client previousValue = this._Categorie_client.Entity;
				if (((previousValue != value) 
							|| (this._Categorie_client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Categorie_client.Entity = null;
						previousValue.Client.Remove(this);
					}
					this._Categorie_client.Entity = value;
					if ((value != null))
					{
						value.Client.Add(this);
						this._CodeCateg = value.CodeCateg;
					}
					else
					{
						this._CodeCateg = default(string);
					}
					this.SendPropertyChanged("Categorie_client");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Facturation(Facturation entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_Facturation(Facturation entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Date_livraison")]
	public partial class Date_livraison : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodeLivr;
		
		private string _Jrlivr;
		
		private string _MsLivr;
		
		private string _AnLivr;
		
		private EntitySet<Assurance> _Assurance;
		
		private EntitySet<Facturation> _Facturation;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeLivrChanging(string value);
    partial void OnCodeLivrChanged();
    partial void OnJrlivrChanging(string value);
    partial void OnJrlivrChanged();
    partial void OnMsLivrChanging(string value);
    partial void OnMsLivrChanged();
    partial void OnAnLivrChanging(string value);
    partial void OnAnLivrChanged();
    #endregion
		
		public Date_livraison()
		{
			this._Assurance = new EntitySet<Assurance>(new Action<Assurance>(this.attach_Assurance), new Action<Assurance>(this.detach_Assurance));
			this._Facturation = new EntitySet<Facturation>(new Action<Facturation>(this.attach_Facturation), new Action<Facturation>(this.detach_Facturation));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeLivr", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodeLivr
		{
			get
			{
				return this._CodeLivr;
			}
			set
			{
				if ((this._CodeLivr != value))
				{
					this.OnCodeLivrChanging(value);
					this.SendPropertyChanging();
					this._CodeLivr = value;
					this.SendPropertyChanged("CodeLivr");
					this.OnCodeLivrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jrlivr", DbType="VarChar(2)")]
		public string Jrlivr
		{
			get
			{
				return this._Jrlivr;
			}
			set
			{
				if ((this._Jrlivr != value))
				{
					this.OnJrlivrChanging(value);
					this.SendPropertyChanging();
					this._Jrlivr = value;
					this.SendPropertyChanged("Jrlivr");
					this.OnJrlivrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MsLivr", DbType="VarChar(15)")]
		public string MsLivr
		{
			get
			{
				return this._MsLivr;
			}
			set
			{
				if ((this._MsLivr != value))
				{
					this.OnMsLivrChanging(value);
					this.SendPropertyChanging();
					this._MsLivr = value;
					this.SendPropertyChanged("MsLivr");
					this.OnMsLivrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnLivr", DbType="VarChar(8)")]
		public string AnLivr
		{
			get
			{
				return this._AnLivr;
			}
			set
			{
				if ((this._AnLivr != value))
				{
					this.OnAnLivrChanging(value);
					this.SendPropertyChanging();
					this._AnLivr = value;
					this.SendPropertyChanged("AnLivr");
					this.OnAnLivrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Date_livraison_Assurance", Storage="_Assurance", ThisKey="CodeLivr", OtherKey="CodeLivr")]
		public EntitySet<Assurance> Assurance
		{
			get
			{
				return this._Assurance;
			}
			set
			{
				this._Assurance.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Date_livraison_Facturation", Storage="_Facturation", ThisKey="CodeLivr", OtherKey="CodeLivr")]
		public EntitySet<Facturation> Facturation
		{
			get
			{
				return this._Facturation;
			}
			set
			{
				this._Facturation.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Assurance(Assurance entity)
		{
			this.SendPropertyChanging();
			entity.Date_livraison = this;
		}
		
		private void detach_Assurance(Assurance entity)
		{
			this.SendPropertyChanging();
			entity.Date_livraison = null;
		}
		
		private void attach_Facturation(Facturation entity)
		{
			this.SendPropertyChanging();
			entity.Date_livraison = this;
		}
		
		private void detach_Facturation(Facturation entity)
		{
			this.SendPropertyChanging();
			entity.Date_livraison = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dossier")]
	public partial class Dossier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodeDossier;
		
		private string _libDoss;
		
		private string _Jrdoss;
		
		private string _MsDoss;
		
		private string _AnDoss;
		
		private string _Codepl;
		
		private EntityRef<Plainte> _Plainte;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeDossierChanging(string value);
    partial void OnCodeDossierChanged();
    partial void OnlibDossChanging(string value);
    partial void OnlibDossChanged();
    partial void OnJrdossChanging(string value);
    partial void OnJrdossChanged();
    partial void OnMsDossChanging(string value);
    partial void OnMsDossChanged();
    partial void OnAnDossChanging(string value);
    partial void OnAnDossChanged();
    partial void OnCodeplChanging(string value);
    partial void OnCodeplChanged();
    #endregion
		
		public Dossier()
		{
			this._Plainte = default(EntityRef<Plainte>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeDossier", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodeDossier
		{
			get
			{
				return this._CodeDossier;
			}
			set
			{
				if ((this._CodeDossier != value))
				{
					this.OnCodeDossierChanging(value);
					this.SendPropertyChanging();
					this._CodeDossier = value;
					this.SendPropertyChanged("CodeDossier");
					this.OnCodeDossierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_libDoss", DbType="VarChar(20)")]
		public string libDoss
		{
			get
			{
				return this._libDoss;
			}
			set
			{
				if ((this._libDoss != value))
				{
					this.OnlibDossChanging(value);
					this.SendPropertyChanging();
					this._libDoss = value;
					this.SendPropertyChanged("libDoss");
					this.OnlibDossChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jrdoss", DbType="VarChar(2)")]
		public string Jrdoss
		{
			get
			{
				return this._Jrdoss;
			}
			set
			{
				if ((this._Jrdoss != value))
				{
					this.OnJrdossChanging(value);
					this.SendPropertyChanging();
					this._Jrdoss = value;
					this.SendPropertyChanged("Jrdoss");
					this.OnJrdossChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MsDoss", DbType="VarChar(13)")]
		public string MsDoss
		{
			get
			{
				return this._MsDoss;
			}
			set
			{
				if ((this._MsDoss != value))
				{
					this.OnMsDossChanging(value);
					this.SendPropertyChanging();
					this._MsDoss = value;
					this.SendPropertyChanged("MsDoss");
					this.OnMsDossChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnDoss", DbType="VarChar(8)")]
		public string AnDoss
		{
			get
			{
				return this._AnDoss;
			}
			set
			{
				if ((this._AnDoss != value))
				{
					this.OnAnDossChanging(value);
					this.SendPropertyChanging();
					this._AnDoss = value;
					this.SendPropertyChanged("AnDoss");
					this.OnAnDossChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codepl", DbType="VarChar(5)")]
		public string Codepl
		{
			get
			{
				return this._Codepl;
			}
			set
			{
				if ((this._Codepl != value))
				{
					if (this._Plainte.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodeplChanging(value);
					this.SendPropertyChanging();
					this._Codepl = value;
					this.SendPropertyChanged("Codepl");
					this.OnCodeplChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plainte_Dossier", Storage="_Plainte", ThisKey="Codepl", OtherKey="Codepl", IsForeignKey=true)]
		public Plainte Plainte
		{
			get
			{
				return this._Plainte.Entity;
			}
			set
			{
				Plainte previousValue = this._Plainte.Entity;
				if (((previousValue != value) 
							|| (this._Plainte.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Plainte.Entity = null;
						previousValue.Dossier.Remove(this);
					}
					this._Plainte.Entity = value;
					if ((value != null))
					{
						value.Dossier.Add(this);
						this._Codepl = value.Codepl;
					}
					else
					{
						this._Codepl = default(string);
					}
					this.SendPropertyChanged("Plainte");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Facturation")]
	public partial class Facturation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NumFact;
		
		private string _libFact;
		
		private string _Numcli;
		
		private string _CodeLivr;
		
		private EntityRef<Client> _Client;
		
		private EntityRef<Date_livraison> _Date_livraison;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumFactChanging(string value);
    partial void OnNumFactChanged();
    partial void OnlibFactChanging(string value);
    partial void OnlibFactChanged();
    partial void OnNumcliChanging(string value);
    partial void OnNumcliChanged();
    partial void OnCodeLivrChanging(string value);
    partial void OnCodeLivrChanged();
    #endregion
		
		public Facturation()
		{
			this._Client = default(EntityRef<Client>);
			this._Date_livraison = default(EntityRef<Date_livraison>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumFact", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NumFact
		{
			get
			{
				return this._NumFact;
			}
			set
			{
				if ((this._NumFact != value))
				{
					this.OnNumFactChanging(value);
					this.SendPropertyChanging();
					this._NumFact = value;
					this.SendPropertyChanged("NumFact");
					this.OnNumFactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_libFact", DbType="VarChar(30)")]
		public string libFact
		{
			get
			{
				return this._libFact;
			}
			set
			{
				if ((this._libFact != value))
				{
					this.OnlibFactChanging(value);
					this.SendPropertyChanging();
					this._libFact = value;
					this.SendPropertyChanged("libFact");
					this.OnlibFactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numcli", DbType="VarChar(5)")]
		public string Numcli
		{
			get
			{
				return this._Numcli;
			}
			set
			{
				if ((this._Numcli != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNumcliChanging(value);
					this.SendPropertyChanging();
					this._Numcli = value;
					this.SendPropertyChanged("Numcli");
					this.OnNumcliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeLivr", DbType="VarChar(5)")]
		public string CodeLivr
		{
			get
			{
				return this._CodeLivr;
			}
			set
			{
				if ((this._CodeLivr != value))
				{
					if (this._Date_livraison.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodeLivrChanging(value);
					this.SendPropertyChanging();
					this._CodeLivr = value;
					this.SendPropertyChanged("CodeLivr");
					this.OnCodeLivrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Facturation", Storage="_Client", ThisKey="Numcli", OtherKey="Numcli", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.Facturation.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.Facturation.Add(this);
						this._Numcli = value.Numcli;
					}
					else
					{
						this._Numcli = default(string);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Date_livraison_Facturation", Storage="_Date_livraison", ThisKey="CodeLivr", OtherKey="CodeLivr", IsForeignKey=true)]
		public Date_livraison Date_livraison
		{
			get
			{
				return this._Date_livraison.Entity;
			}
			set
			{
				Date_livraison previousValue = this._Date_livraison.Entity;
				if (((previousValue != value) 
							|| (this._Date_livraison.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Date_livraison.Entity = null;
						previousValue.Facturation.Remove(this);
					}
					this._Date_livraison.Entity = value;
					if ((value != null))
					{
						value.Facturation.Add(this);
						this._CodeLivr = value.CodeLivr;
					}
					else
					{
						this._CodeLivr = default(string);
					}
					this.SendPropertyChanged("Date_livraison");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Presentation_Pliante")]
	public partial class Presentation_Pliante : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodePres;
		
		private string _LibPres;
		
		private string _NumCli;
		
		private string _Codepl;
		
		private EntityRef<Plainte> _Plainte;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodePresChanging(string value);
    partial void OnCodePresChanged();
    partial void OnLibPresChanging(string value);
    partial void OnLibPresChanged();
    partial void OnNumCliChanging(string value);
    partial void OnNumCliChanged();
    partial void OnCodeplChanging(string value);
    partial void OnCodeplChanged();
    #endregion
		
		public Presentation_Pliante()
		{
			this._Plainte = default(EntityRef<Plainte>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodePres", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodePres
		{
			get
			{
				return this._CodePres;
			}
			set
			{
				if ((this._CodePres != value))
				{
					this.OnCodePresChanging(value);
					this.SendPropertyChanging();
					this._CodePres = value;
					this.SendPropertyChanged("CodePres");
					this.OnCodePresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibPres", DbType="VarChar(25)")]
		public string LibPres
		{
			get
			{
				return this._LibPres;
			}
			set
			{
				if ((this._LibPres != value))
				{
					this.OnLibPresChanging(value);
					this.SendPropertyChanging();
					this._LibPres = value;
					this.SendPropertyChanged("LibPres");
					this.OnLibPresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumCli", DbType="VarChar(5)")]
		public string NumCli
		{
			get
			{
				return this._NumCli;
			}
			set
			{
				if ((this._NumCli != value))
				{
					this.OnNumCliChanging(value);
					this.SendPropertyChanging();
					this._NumCli = value;
					this.SendPropertyChanged("NumCli");
					this.OnNumCliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codepl", DbType="VarChar(5)")]
		public string Codepl
		{
			get
			{
				return this._Codepl;
			}
			set
			{
				if ((this._Codepl != value))
				{
					if (this._Plainte.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodeplChanging(value);
					this.SendPropertyChanging();
					this._Codepl = value;
					this.SendPropertyChanged("Codepl");
					this.OnCodeplChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plainte_Presentation_Pliante", Storage="_Plainte", ThisKey="Codepl", OtherKey="Codepl", IsForeignKey=true)]
		public Plainte Plainte
		{
			get
			{
				return this._Plainte.Entity;
			}
			set
			{
				Plainte previousValue = this._Plainte.Entity;
				if (((previousValue != value) 
							|| (this._Plainte.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Plainte.Entity = null;
						previousValue.Presentation_Pliante.Remove(this);
					}
					this._Plainte.Entity = value;
					if ((value != null))
					{
						value.Presentation_Pliante.Add(this);
						this._Codepl = value.Codepl;
					}
					else
					{
						this._Codepl = default(string);
					}
					this.SendPropertyChanged("Plainte");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Plainte")]
	public partial class Plainte : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Codepl;
		
		private string _Jrpl;
		
		private string _Mspl;
		
		private string _Anpl;
		
		private string _codecategPl;
		
		private EntitySet<Dossier> _Dossier;
		
		private EntitySet<Presentation_Pliante> _Presentation_Pliante;
		
		private EntityRef<Categorie_Plainte> _Categorie_Plainte;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeplChanging(string value);
    partial void OnCodeplChanged();
    partial void OnJrplChanging(string value);
    partial void OnJrplChanged();
    partial void OnMsplChanging(string value);
    partial void OnMsplChanged();
    partial void OnAnplChanging(string value);
    partial void OnAnplChanged();
    partial void OncodecategPlChanging(string value);
    partial void OncodecategPlChanged();
    #endregion
		
		public Plainte()
		{
			this._Dossier = new EntitySet<Dossier>(new Action<Dossier>(this.attach_Dossier), new Action<Dossier>(this.detach_Dossier));
			this._Presentation_Pliante = new EntitySet<Presentation_Pliante>(new Action<Presentation_Pliante>(this.attach_Presentation_Pliante), new Action<Presentation_Pliante>(this.detach_Presentation_Pliante));
			this._Categorie_Plainte = default(EntityRef<Categorie_Plainte>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codepl", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Codepl
		{
			get
			{
				return this._Codepl;
			}
			set
			{
				if ((this._Codepl != value))
				{
					this.OnCodeplChanging(value);
					this.SendPropertyChanging();
					this._Codepl = value;
					this.SendPropertyChanged("Codepl");
					this.OnCodeplChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jrpl", DbType="VarChar(2)")]
		public string Jrpl
		{
			get
			{
				return this._Jrpl;
			}
			set
			{
				if ((this._Jrpl != value))
				{
					this.OnJrplChanging(value);
					this.SendPropertyChanging();
					this._Jrpl = value;
					this.SendPropertyChanged("Jrpl");
					this.OnJrplChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mspl", DbType="VarChar(13)")]
		public string Mspl
		{
			get
			{
				return this._Mspl;
			}
			set
			{
				if ((this._Mspl != value))
				{
					this.OnMsplChanging(value);
					this.SendPropertyChanging();
					this._Mspl = value;
					this.SendPropertyChanged("Mspl");
					this.OnMsplChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anpl", DbType="VarChar(8)")]
		public string Anpl
		{
			get
			{
				return this._Anpl;
			}
			set
			{
				if ((this._Anpl != value))
				{
					this.OnAnplChanging(value);
					this.SendPropertyChanging();
					this._Anpl = value;
					this.SendPropertyChanged("Anpl");
					this.OnAnplChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codecategPl", DbType="VarChar(5)")]
		public string codecategPl
		{
			get
			{
				return this._codecategPl;
			}
			set
			{
				if ((this._codecategPl != value))
				{
					if (this._Categorie_Plainte.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncodecategPlChanging(value);
					this.SendPropertyChanging();
					this._codecategPl = value;
					this.SendPropertyChanged("codecategPl");
					this.OncodecategPlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plainte_Dossier", Storage="_Dossier", ThisKey="Codepl", OtherKey="Codepl")]
		public EntitySet<Dossier> Dossier
		{
			get
			{
				return this._Dossier;
			}
			set
			{
				this._Dossier.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plainte_Presentation_Pliante", Storage="_Presentation_Pliante", ThisKey="Codepl", OtherKey="Codepl")]
		public EntitySet<Presentation_Pliante> Presentation_Pliante
		{
			get
			{
				return this._Presentation_Pliante;
			}
			set
			{
				this._Presentation_Pliante.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categorie_Plainte_Plainte", Storage="_Categorie_Plainte", ThisKey="codecategPl", OtherKey="CodeCategpl", IsForeignKey=true)]
		public Categorie_Plainte Categorie_Plainte
		{
			get
			{
				return this._Categorie_Plainte.Entity;
			}
			set
			{
				Categorie_Plainte previousValue = this._Categorie_Plainte.Entity;
				if (((previousValue != value) 
							|| (this._Categorie_Plainte.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Categorie_Plainte.Entity = null;
						previousValue.Plainte.Remove(this);
					}
					this._Categorie_Plainte.Entity = value;
					if ((value != null))
					{
						value.Plainte.Add(this);
						this._codecategPl = value.CodeCategpl;
					}
					else
					{
						this._codecategPl = default(string);
					}
					this.SendPropertyChanged("Categorie_Plainte");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Dossier(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Plainte = this;
		}
		
		private void detach_Dossier(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Plainte = null;
		}
		
		private void attach_Presentation_Pliante(Presentation_Pliante entity)
		{
			this.SendPropertyChanging();
			entity.Plainte = this;
		}
		
		private void detach_Presentation_Pliante(Presentation_Pliante entity)
		{
			this.SendPropertyChanging();
			entity.Plainte = null;
		}
	}
}
#pragma warning restore 1591
